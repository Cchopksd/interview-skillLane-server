services:
  postgres:
    image: postgres:16-alpine
    container_name: skilllane_postgres
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_skilllane_data:/var/lib/postgresql/data
    networks:
      - skilllane_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d skilllane_db']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: skilllane_api
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '8080:8080'
    volumes:
      - uploads_data:/app/uploads
    networks:
      - skilllane_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_skilllane_data:
    driver: local
  uploads_data:
    driver: local

networks:
  skilllane_network:
    driver: bridge
